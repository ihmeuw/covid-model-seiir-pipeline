"""Static definitions for the compartments and model parameters.

This code is automatically generated by generator/make_constants.py

Any manual changes will be lost.
"""
from collections import (
    namedtuple,
)
import os

import numpy as np
from numba.core import (
    types,
)
from numba.typed import (
    Dict,
)


#######################
# Primitive variables #
#######################

_BaseCompartment = namedtuple('BaseCompartment', [
    'S', 
    'E', 
    'I', 
    'R', 
])

_Variant = namedtuple('Variant', [
    'ancestral', 
    'alpha',     
    'beta',      
    'gamma',     
    'delta',     
    'other',     
    'omega',     
])

_BaseParameter = namedtuple('BaseParameter', [
    'alpha', 
    'sigma', 
    'gamma', 
    'pi',    
    'new_e', 
])

_VariantParameter = namedtuple('VariantParameter', [
    'beta',  
    'kappa', 
    'rho',   
])

_RiskGroup = namedtuple('RiskGroup', [
    'lr', 
    'hr', 
])

_ProtectionStatus = namedtuple('ProtectionStatus', [
    'unprotected',          
    'non_escape_protected', 
    'escape_protected',     
    'omega_protected',      
])

_ImmuneStatus = namedtuple('ImmuneStatus', [
    'non_escape_immune', 
    'escape_immune',     
    'omega_immune',      
])

_VaccinationStatus = namedtuple('VaccinationStatus', [
    'unvaccinated', 
    'vaccinated',   
])

_RemovedVaccinationStatus = namedtuple('RemovedVaccinationStatus', [
    'unvaccinated',     
    'vaccinated',       
    'newly_vaccinated', 
])

_SusceptibleType = namedtuple('SusceptibleType', [
    'unprotected',          
    'non_escape_protected', 
    'escape_protected',     
    'omega_protected',      
    'non_escape_immune',    
    'escape_immune',        
    'omega_immune',         
])

BASE_COMPARTMENT = _BaseCompartment(*_BaseCompartment._fields)
VARIANT = _Variant(*_Variant._fields)
BASE_PARAMETER = _BaseParameter(*_BaseParameter._fields)
VARIANT_PARAMETER = _VariantParameter(*_VariantParameter._fields)
RISK_GROUP = _RiskGroup(*_RiskGroup._fields)
PROTECTION_STATUS = _ProtectionStatus(*_ProtectionStatus._fields)
IMMUNE_STATUS = _ImmuneStatus(*_ImmuneStatus._fields)
VACCINATION_STATUS = _VaccinationStatus(*_VaccinationStatus._fields)
REMOVED_VACCINATION_STATUS = _RemovedVaccinationStatus(*_RemovedVaccinationStatus._fields)
SUSCEPTIBLE_TYPE = _SusceptibleType(*_SusceptibleType._fields)

PARAMETERS = Dict.empty(
    types.UniTuple(types.unicode_type, 2),
    types.int8,
)
PARAMETERS[('alpha', 'all')] = np.int8(0)
PARAMETERS[('sigma', 'all')] = np.int8(1)
PARAMETERS[('gamma', 'all')] = np.int8(2)
PARAMETERS[('pi', 'all')] = np.int8(3)
PARAMETERS[('new_e', 'all')] = np.int8(4)
PARAMETERS[('beta', 'ancestral')] = np.int8(5)
PARAMETERS[('beta', 'alpha')] = np.int8(6)
PARAMETERS[('beta', 'beta')] = np.int8(7)
PARAMETERS[('beta', 'gamma')] = np.int8(8)
PARAMETERS[('beta', 'delta')] = np.int8(9)
PARAMETERS[('beta', 'other')] = np.int8(10)
PARAMETERS[('beta', 'omega')] = np.int8(11)
PARAMETERS[('kappa', 'ancestral')] = np.int8(12)
PARAMETERS[('kappa', 'alpha')] = np.int8(13)
PARAMETERS[('kappa', 'beta')] = np.int8(14)
PARAMETERS[('kappa', 'gamma')] = np.int8(15)
PARAMETERS[('kappa', 'delta')] = np.int8(16)
PARAMETERS[('kappa', 'other')] = np.int8(17)
PARAMETERS[('kappa', 'omega')] = np.int8(18)
PARAMETERS[('rho', 'ancestral')] = np.int8(19)
PARAMETERS[('rho', 'alpha')] = np.int8(20)
PARAMETERS[('rho', 'beta')] = np.int8(21)
PARAMETERS[('rho', 'gamma')] = np.int8(22)
PARAMETERS[('rho', 'delta')] = np.int8(23)
PARAMETERS[('rho', 'other')] = np.int8(24)
PARAMETERS[('rho', 'omega')] = np.int8(25)
PARAMETERS_NAMES = ['_'.join(k) for k in PARAMETERS]

COMPARTMENTS = Dict.empty(
    types.UniTuple(types.unicode_type, 3),
    types.int8,
)
COMPARTMENTS[('S', 'unprotected', 'unvaccinated')] = np.int8(0)
COMPARTMENTS[('S', 'unprotected', 'vaccinated')] = np.int8(1)
COMPARTMENTS[('S', 'non_escape_protected', 'unvaccinated')] = np.int8(2)
COMPARTMENTS[('S', 'non_escape_protected', 'vaccinated')] = np.int8(3)
COMPARTMENTS[('S', 'escape_protected', 'unvaccinated')] = np.int8(4)
COMPARTMENTS[('S', 'escape_protected', 'vaccinated')] = np.int8(5)
COMPARTMENTS[('S', 'omega_protected', 'unvaccinated')] = np.int8(6)
COMPARTMENTS[('S', 'omega_protected', 'vaccinated')] = np.int8(7)
COMPARTMENTS[('S', 'non_escape_immune', 'unvaccinated')] = np.int8(8)
COMPARTMENTS[('S', 'non_escape_immune', 'vaccinated')] = np.int8(9)
COMPARTMENTS[('S', 'escape_immune', 'unvaccinated')] = np.int8(10)
COMPARTMENTS[('S', 'escape_immune', 'vaccinated')] = np.int8(11)
COMPARTMENTS[('S', 'omega_immune', 'unvaccinated')] = np.int8(12)
COMPARTMENTS[('S', 'omega_immune', 'vaccinated')] = np.int8(13)
COMPARTMENTS[('E', 'ancestral', 'unvaccinated')] = np.int8(14)
COMPARTMENTS[('E', 'ancestral', 'vaccinated')] = np.int8(15)
COMPARTMENTS[('E', 'alpha', 'unvaccinated')] = np.int8(16)
COMPARTMENTS[('E', 'alpha', 'vaccinated')] = np.int8(17)
COMPARTMENTS[('E', 'beta', 'unvaccinated')] = np.int8(18)
COMPARTMENTS[('E', 'beta', 'vaccinated')] = np.int8(19)
COMPARTMENTS[('E', 'gamma', 'unvaccinated')] = np.int8(20)
COMPARTMENTS[('E', 'gamma', 'vaccinated')] = np.int8(21)
COMPARTMENTS[('E', 'delta', 'unvaccinated')] = np.int8(22)
COMPARTMENTS[('E', 'delta', 'vaccinated')] = np.int8(23)
COMPARTMENTS[('E', 'other', 'unvaccinated')] = np.int8(24)
COMPARTMENTS[('E', 'other', 'vaccinated')] = np.int8(25)
COMPARTMENTS[('E', 'omega', 'unvaccinated')] = np.int8(26)
COMPARTMENTS[('E', 'omega', 'vaccinated')] = np.int8(27)
COMPARTMENTS[('I', 'ancestral', 'unvaccinated')] = np.int8(28)
COMPARTMENTS[('I', 'ancestral', 'vaccinated')] = np.int8(29)
COMPARTMENTS[('I', 'alpha', 'unvaccinated')] = np.int8(30)
COMPARTMENTS[('I', 'alpha', 'vaccinated')] = np.int8(31)
COMPARTMENTS[('I', 'beta', 'unvaccinated')] = np.int8(32)
COMPARTMENTS[('I', 'beta', 'vaccinated')] = np.int8(33)
COMPARTMENTS[('I', 'gamma', 'unvaccinated')] = np.int8(34)
COMPARTMENTS[('I', 'gamma', 'vaccinated')] = np.int8(35)
COMPARTMENTS[('I', 'delta', 'unvaccinated')] = np.int8(36)
COMPARTMENTS[('I', 'delta', 'vaccinated')] = np.int8(37)
COMPARTMENTS[('I', 'other', 'unvaccinated')] = np.int8(38)
COMPARTMENTS[('I', 'other', 'vaccinated')] = np.int8(39)
COMPARTMENTS[('I', 'omega', 'unvaccinated')] = np.int8(40)
COMPARTMENTS[('I', 'omega', 'vaccinated')] = np.int8(41)
COMPARTMENTS[('R', 'ancestral', 'unvaccinated')] = np.int8(42)
COMPARTMENTS[('R', 'ancestral', 'vaccinated')] = np.int8(43)
COMPARTMENTS[('R', 'ancestral', 'newly_vaccinated')] = np.int8(44)
COMPARTMENTS[('R', 'alpha', 'unvaccinated')] = np.int8(45)
COMPARTMENTS[('R', 'alpha', 'vaccinated')] = np.int8(46)
COMPARTMENTS[('R', 'alpha', 'newly_vaccinated')] = np.int8(47)
COMPARTMENTS[('R', 'beta', 'unvaccinated')] = np.int8(48)
COMPARTMENTS[('R', 'beta', 'vaccinated')] = np.int8(49)
COMPARTMENTS[('R', 'beta', 'newly_vaccinated')] = np.int8(50)
COMPARTMENTS[('R', 'gamma', 'unvaccinated')] = np.int8(51)
COMPARTMENTS[('R', 'gamma', 'vaccinated')] = np.int8(52)
COMPARTMENTS[('R', 'gamma', 'newly_vaccinated')] = np.int8(53)
COMPARTMENTS[('R', 'delta', 'unvaccinated')] = np.int8(54)
COMPARTMENTS[('R', 'delta', 'vaccinated')] = np.int8(55)
COMPARTMENTS[('R', 'delta', 'newly_vaccinated')] = np.int8(56)
COMPARTMENTS[('R', 'other', 'unvaccinated')] = np.int8(57)
COMPARTMENTS[('R', 'other', 'vaccinated')] = np.int8(58)
COMPARTMENTS[('R', 'other', 'newly_vaccinated')] = np.int8(59)
COMPARTMENTS[('R', 'omega', 'unvaccinated')] = np.int8(60)
COMPARTMENTS[('R', 'omega', 'vaccinated')] = np.int8(61)
COMPARTMENTS[('R', 'omega', 'newly_vaccinated')] = np.int8(62)
COMPARTMENTS_NAMES = ['_'.join(k) for k in COMPARTMENTS]

TRACKING_COMPARTMENTS = Dict.empty(
    types.UniTuple(types.unicode_type, 2),
    types.int8,
)
TRACKING_COMPARTMENTS[('NewE', 'unvaccinated')] = np.int8(63)
TRACKING_COMPARTMENTS[('NewE', 'vaccinated')] = np.int8(64)
TRACKING_COMPARTMENTS[('NewE', 'ancestral')] = np.int8(65)
TRACKING_COMPARTMENTS[('NewE', 'alpha')] = np.int8(66)
TRACKING_COMPARTMENTS[('NewE', 'beta')] = np.int8(67)
TRACKING_COMPARTMENTS[('NewE', 'gamma')] = np.int8(68)
TRACKING_COMPARTMENTS[('NewE', 'delta')] = np.int8(69)
TRACKING_COMPARTMENTS[('NewE', 'other')] = np.int8(70)
TRACKING_COMPARTMENTS[('NewE', 'omega')] = np.int8(71)
TRACKING_COMPARTMENTS[('NewE', 'total')] = np.int8(72)
TRACKING_COMPARTMENTS[('NewVaxImmune', 'non_escape_immune')] = np.int8(73)
TRACKING_COMPARTMENTS[('NewVaxImmune', 'escape_immune')] = np.int8(74)
TRACKING_COMPARTMENTS[('NewVaxImmune', 'omega_immune')] = np.int8(75)
TRACKING_COMPARTMENTS[('NewR', 'ancestral')] = np.int8(76)
TRACKING_COMPARTMENTS[('NewR', 'alpha')] = np.int8(77)
TRACKING_COMPARTMENTS[('NewR', 'beta')] = np.int8(78)
TRACKING_COMPARTMENTS[('NewR', 'gamma')] = np.int8(79)
TRACKING_COMPARTMENTS[('NewR', 'delta')] = np.int8(80)
TRACKING_COMPARTMENTS[('NewR', 'other')] = np.int8(81)
TRACKING_COMPARTMENTS[('NewR', 'omega')] = np.int8(82)
TRACKING_COMPARTMENTS[('NewR', 'total')] = np.int8(83)
TRACKING_COMPARTMENTS[('Waned', 'natural')] = np.int8(84)
TRACKING_COMPARTMENTS[('Waned', 'vaccine')] = np.int8(85)
TRACKING_COMPARTMENTS[('Waned', 'ancestral')] = np.int8(86)
TRACKING_COMPARTMENTS[('Waned', 'alpha')] = np.int8(87)
TRACKING_COMPARTMENTS[('Waned', 'beta')] = np.int8(88)
TRACKING_COMPARTMENTS[('Waned', 'gamma')] = np.int8(89)
TRACKING_COMPARTMENTS[('Waned', 'delta')] = np.int8(90)
TRACKING_COMPARTMENTS[('Waned', 'other')] = np.int8(91)
TRACKING_COMPARTMENTS[('Waned', 'omega')] = np.int8(92)
TRACKING_COMPARTMENTS[('Waned', 'non_escape_immune')] = np.int8(93)
TRACKING_COMPARTMENTS[('Waned', 'escape_immune')] = np.int8(94)
TRACKING_COMPARTMENTS[('Waned', 'omega_immune')] = np.int8(95)
TRACKING_COMPARTMENTS_NAMES = ['_'.join(k) for k in TRACKING_COMPARTMENTS]

AGGREGATES = Dict.empty(
    types.UniTuple(types.unicode_type, 2),
    types.int8,
)
AGGREGATES[('S', 'ancestral')] = np.int8(0)
AGGREGATES[('S', 'alpha')] = np.int8(1)
AGGREGATES[('S', 'beta')] = np.int8(2)
AGGREGATES[('S', 'gamma')] = np.int8(3)
AGGREGATES[('S', 'delta')] = np.int8(4)
AGGREGATES[('S', 'other')] = np.int8(5)
AGGREGATES[('S', 'omega')] = np.int8(6)
AGGREGATES[('E', 'ancestral')] = np.int8(7)
AGGREGATES[('E', 'alpha')] = np.int8(8)
AGGREGATES[('E', 'beta')] = np.int8(9)
AGGREGATES[('E', 'gamma')] = np.int8(10)
AGGREGATES[('E', 'delta')] = np.int8(11)
AGGREGATES[('E', 'other')] = np.int8(12)
AGGREGATES[('E', 'omega')] = np.int8(13)
AGGREGATES[('I', 'ancestral')] = np.int8(14)
AGGREGATES[('I', 'alpha')] = np.int8(15)
AGGREGATES[('I', 'beta')] = np.int8(16)
AGGREGATES[('I', 'gamma')] = np.int8(17)
AGGREGATES[('I', 'delta')] = np.int8(18)
AGGREGATES[('I', 'other')] = np.int8(19)
AGGREGATES[('I', 'omega')] = np.int8(20)
AGGREGATES[('R', 'ancestral')] = np.int8(21)
AGGREGATES[('R', 'alpha')] = np.int8(22)
AGGREGATES[('R', 'beta')] = np.int8(23)
AGGREGATES[('R', 'gamma')] = np.int8(24)
AGGREGATES[('R', 'delta')] = np.int8(25)
AGGREGATES[('R', 'other')] = np.int8(26)
AGGREGATES[('R', 'omega')] = np.int8(27)
AGGREGATES[('N', 'unvaccinated')] = np.int8(28)
AGGREGATES[('N', 'vaccinated')] = np.int8(29)
AGGREGATES_NAMES = ['_'.join(k) for k in AGGREGATES]

FORCE_OF_INFECTION = Dict.empty(
    types.UniTuple(types.unicode_type, 1),
    types.int8,
)
FORCE_OF_INFECTION[('ancestral',)] = np.int8(0)
FORCE_OF_INFECTION[('alpha',)] = np.int8(1)
FORCE_OF_INFECTION[('beta',)] = np.int8(2)
FORCE_OF_INFECTION[('gamma',)] = np.int8(3)
FORCE_OF_INFECTION[('delta',)] = np.int8(4)
FORCE_OF_INFECTION[('other',)] = np.int8(5)
FORCE_OF_INFECTION[('omega',)] = np.int8(6)
FORCE_OF_INFECTION_NAMES = ['_'.join(k) for k in FORCE_OF_INFECTION]

WANED = Dict.empty(
    types.UniTuple(types.unicode_type, 1),
    types.int8,
)
WANED[('natural',)] = np.int8(0)
WANED[('vaccine',)] = np.int8(1)
WANED_NAMES = ['_'.join(k) for k in WANED]

COMPARTMENT_GROUPS = Dict.empty(
    types.UniTuple(types.unicode_type, 2),
    types.int8[:],
)
COMPARTMENT_GROUPS[('S', 'ancestral')] = np.array([
    COMPARTMENTS[('S', 'unprotected', 'unvaccinated')],
    COMPARTMENTS[('S', 'unprotected', 'vaccinated')],
    COMPARTMENTS[('S', 'non_escape_protected', 'unvaccinated')],
    COMPARTMENTS[('S', 'non_escape_protected', 'vaccinated')],
    COMPARTMENTS[('S', 'escape_protected', 'unvaccinated')],
    COMPARTMENTS[('S', 'escape_protected', 'vaccinated')],
    COMPARTMENTS[('S', 'omega_protected', 'unvaccinated')],
    COMPARTMENTS[('S', 'omega_protected', 'vaccinated')],
], dtype=np.int8)
COMPARTMENT_GROUPS[('S', 'alpha')] = np.array([
    COMPARTMENTS[('S', 'unprotected', 'unvaccinated')],
    COMPARTMENTS[('S', 'unprotected', 'vaccinated')],
    COMPARTMENTS[('S', 'non_escape_protected', 'unvaccinated')],
    COMPARTMENTS[('S', 'non_escape_protected', 'vaccinated')],
    COMPARTMENTS[('S', 'escape_protected', 'unvaccinated')],
    COMPARTMENTS[('S', 'escape_protected', 'vaccinated')],
    COMPARTMENTS[('S', 'omega_protected', 'unvaccinated')],
    COMPARTMENTS[('S', 'omega_protected', 'vaccinated')],
], dtype=np.int8)
COMPARTMENT_GROUPS[('S', 'beta')] = np.array([
    COMPARTMENTS[('S', 'unprotected', 'unvaccinated')],
    COMPARTMENTS[('S', 'unprotected', 'vaccinated')],
    COMPARTMENTS[('S', 'non_escape_protected', 'unvaccinated')],
    COMPARTMENTS[('S', 'non_escape_protected', 'vaccinated')],
    COMPARTMENTS[('S', 'escape_protected', 'unvaccinated')],
    COMPARTMENTS[('S', 'escape_protected', 'vaccinated')],
    COMPARTMENTS[('S', 'omega_protected', 'unvaccinated')],
    COMPARTMENTS[('S', 'omega_protected', 'vaccinated')],
    COMPARTMENTS[('S', 'non_escape_immune', 'unvaccinated')],
    COMPARTMENTS[('S', 'non_escape_immune', 'vaccinated')],
], dtype=np.int8)
COMPARTMENT_GROUPS[('S', 'gamma')] = np.array([
    COMPARTMENTS[('S', 'unprotected', 'unvaccinated')],
    COMPARTMENTS[('S', 'unprotected', 'vaccinated')],
    COMPARTMENTS[('S', 'non_escape_protected', 'unvaccinated')],
    COMPARTMENTS[('S', 'non_escape_protected', 'vaccinated')],
    COMPARTMENTS[('S', 'escape_protected', 'unvaccinated')],
    COMPARTMENTS[('S', 'escape_protected', 'vaccinated')],
    COMPARTMENTS[('S', 'omega_protected', 'unvaccinated')],
    COMPARTMENTS[('S', 'omega_protected', 'vaccinated')],
    COMPARTMENTS[('S', 'non_escape_immune', 'unvaccinated')],
    COMPARTMENTS[('S', 'non_escape_immune', 'vaccinated')],
], dtype=np.int8)
COMPARTMENT_GROUPS[('S', 'delta')] = np.array([
    COMPARTMENTS[('S', 'unprotected', 'unvaccinated')],
    COMPARTMENTS[('S', 'unprotected', 'vaccinated')],
    COMPARTMENTS[('S', 'non_escape_protected', 'unvaccinated')],
    COMPARTMENTS[('S', 'non_escape_protected', 'vaccinated')],
    COMPARTMENTS[('S', 'escape_protected', 'unvaccinated')],
    COMPARTMENTS[('S', 'escape_protected', 'vaccinated')],
    COMPARTMENTS[('S', 'omega_protected', 'unvaccinated')],
    COMPARTMENTS[('S', 'omega_protected', 'vaccinated')],
    COMPARTMENTS[('S', 'non_escape_immune', 'unvaccinated')],
    COMPARTMENTS[('S', 'non_escape_immune', 'vaccinated')],
], dtype=np.int8)
COMPARTMENT_GROUPS[('S', 'omega')] = np.array([
    COMPARTMENTS[('S', 'unprotected', 'unvaccinated')],
    COMPARTMENTS[('S', 'unprotected', 'vaccinated')],
    COMPARTMENTS[('S', 'non_escape_protected', 'unvaccinated')],
    COMPARTMENTS[('S', 'non_escape_protected', 'vaccinated')],
    COMPARTMENTS[('S', 'escape_protected', 'unvaccinated')],
    COMPARTMENTS[('S', 'escape_protected', 'vaccinated')],
    COMPARTMENTS[('S', 'omega_protected', 'unvaccinated')],
    COMPARTMENTS[('S', 'omega_protected', 'vaccinated')],
    COMPARTMENTS[('S', 'non_escape_immune', 'unvaccinated')],
    COMPARTMENTS[('S', 'non_escape_immune', 'vaccinated')],
    COMPARTMENTS[('S', 'escape_immune', 'unvaccinated')],
    COMPARTMENTS[('S', 'escape_immune', 'vaccinated')],
], dtype=np.int8)
COMPARTMENT_GROUPS[('S', 'total')] = np.array([
    COMPARTMENTS[('S', 'unprotected', 'unvaccinated')],
    COMPARTMENTS[('S', 'unprotected', 'vaccinated')],
    COMPARTMENTS[('S', 'non_escape_protected', 'unvaccinated')],
    COMPARTMENTS[('S', 'non_escape_protected', 'vaccinated')],
    COMPARTMENTS[('S', 'escape_protected', 'unvaccinated')],
    COMPARTMENTS[('S', 'escape_protected', 'vaccinated')],
    COMPARTMENTS[('S', 'omega_protected', 'unvaccinated')],
    COMPARTMENTS[('S', 'omega_protected', 'vaccinated')],
    COMPARTMENTS[('S', 'non_escape_immune', 'unvaccinated')],
    COMPARTMENTS[('S', 'non_escape_immune', 'vaccinated')],
    COMPARTMENTS[('S', 'escape_immune', 'unvaccinated')],
    COMPARTMENTS[('S', 'escape_immune', 'vaccinated')],
    COMPARTMENTS[('S', 'omega_immune', 'unvaccinated')],
    COMPARTMENTS[('S', 'omega_immune', 'vaccinated')],
], dtype=np.int8)
COMPARTMENT_GROUPS[('S', 'non_immune')] = np.array([
    COMPARTMENTS[('S', 'unprotected', 'unvaccinated')],
    COMPARTMENTS[('S', 'unprotected', 'vaccinated')],
    COMPARTMENTS[('S', 'non_escape_protected', 'unvaccinated')],
    COMPARTMENTS[('S', 'non_escape_protected', 'vaccinated')],
    COMPARTMENTS[('S', 'escape_protected', 'unvaccinated')],
    COMPARTMENTS[('S', 'escape_protected', 'vaccinated')],
    COMPARTMENTS[('S', 'omega_protected', 'unvaccinated')],
    COMPARTMENTS[('S', 'omega_protected', 'vaccinated')],
], dtype=np.int8)
COMPARTMENT_GROUPS[('E', 'ancestral')] = np.array([
    COMPARTMENTS[('E', 'ancestral', 'unvaccinated')],
    COMPARTMENTS[('E', 'ancestral', 'vaccinated')],
], dtype=np.int8)
COMPARTMENT_GROUPS[('E', 'alpha')] = np.array([
    COMPARTMENTS[('E', 'alpha', 'unvaccinated')],
    COMPARTMENTS[('E', 'alpha', 'vaccinated')],
], dtype=np.int8)
COMPARTMENT_GROUPS[('E', 'beta')] = np.array([
    COMPARTMENTS[('E', 'beta', 'unvaccinated')],
    COMPARTMENTS[('E', 'beta', 'vaccinated')],
], dtype=np.int8)
COMPARTMENT_GROUPS[('E', 'gamma')] = np.array([
    COMPARTMENTS[('E', 'gamma', 'unvaccinated')],
    COMPARTMENTS[('E', 'gamma', 'vaccinated')],
], dtype=np.int8)
COMPARTMENT_GROUPS[('E', 'delta')] = np.array([
    COMPARTMENTS[('E', 'delta', 'unvaccinated')],
    COMPARTMENTS[('E', 'delta', 'vaccinated')],
], dtype=np.int8)
COMPARTMENT_GROUPS[('E', 'other')] = np.array([
    COMPARTMENTS[('E', 'other', 'unvaccinated')],
    COMPARTMENTS[('E', 'other', 'vaccinated')],
], dtype=np.int8)
COMPARTMENT_GROUPS[('E', 'omega')] = np.array([
    COMPARTMENTS[('E', 'omega', 'unvaccinated')],
    COMPARTMENTS[('E', 'omega', 'vaccinated')],
], dtype=np.int8)
COMPARTMENT_GROUPS[('E', 'total')] = np.array([
    COMPARTMENTS[('E', 'ancestral', 'unvaccinated')],
    COMPARTMENTS[('E', 'ancestral', 'vaccinated')],
    COMPARTMENTS[('E', 'alpha', 'unvaccinated')],
    COMPARTMENTS[('E', 'alpha', 'vaccinated')],
    COMPARTMENTS[('E', 'beta', 'unvaccinated')],
    COMPARTMENTS[('E', 'beta', 'vaccinated')],
    COMPARTMENTS[('E', 'gamma', 'unvaccinated')],
    COMPARTMENTS[('E', 'gamma', 'vaccinated')],
    COMPARTMENTS[('E', 'delta', 'unvaccinated')],
    COMPARTMENTS[('E', 'delta', 'vaccinated')],
    COMPARTMENTS[('E', 'other', 'unvaccinated')],
    COMPARTMENTS[('E', 'other', 'vaccinated')],
    COMPARTMENTS[('E', 'omega', 'unvaccinated')],
    COMPARTMENTS[('E', 'omega', 'vaccinated')],
], dtype=np.int8)
COMPARTMENT_GROUPS[('I', 'ancestral')] = np.array([
    COMPARTMENTS[('I', 'ancestral', 'unvaccinated')],
    COMPARTMENTS[('I', 'ancestral', 'vaccinated')],
], dtype=np.int8)
COMPARTMENT_GROUPS[('I', 'alpha')] = np.array([
    COMPARTMENTS[('I', 'alpha', 'unvaccinated')],
    COMPARTMENTS[('I', 'alpha', 'vaccinated')],
], dtype=np.int8)
COMPARTMENT_GROUPS[('I', 'beta')] = np.array([
    COMPARTMENTS[('I', 'beta', 'unvaccinated')],
    COMPARTMENTS[('I', 'beta', 'vaccinated')],
], dtype=np.int8)
COMPARTMENT_GROUPS[('I', 'gamma')] = np.array([
    COMPARTMENTS[('I', 'gamma', 'unvaccinated')],
    COMPARTMENTS[('I', 'gamma', 'vaccinated')],
], dtype=np.int8)
COMPARTMENT_GROUPS[('I', 'delta')] = np.array([
    COMPARTMENTS[('I', 'delta', 'unvaccinated')],
    COMPARTMENTS[('I', 'delta', 'vaccinated')],
], dtype=np.int8)
COMPARTMENT_GROUPS[('I', 'other')] = np.array([
    COMPARTMENTS[('I', 'other', 'unvaccinated')],
    COMPARTMENTS[('I', 'other', 'vaccinated')],
], dtype=np.int8)
COMPARTMENT_GROUPS[('I', 'omega')] = np.array([
    COMPARTMENTS[('I', 'omega', 'unvaccinated')],
    COMPARTMENTS[('I', 'omega', 'vaccinated')],
], dtype=np.int8)
COMPARTMENT_GROUPS[('I', 'total')] = np.array([
    COMPARTMENTS[('I', 'ancestral', 'unvaccinated')],
    COMPARTMENTS[('I', 'ancestral', 'vaccinated')],
    COMPARTMENTS[('I', 'alpha', 'unvaccinated')],
    COMPARTMENTS[('I', 'alpha', 'vaccinated')],
    COMPARTMENTS[('I', 'beta', 'unvaccinated')],
    COMPARTMENTS[('I', 'beta', 'vaccinated')],
    COMPARTMENTS[('I', 'gamma', 'unvaccinated')],
    COMPARTMENTS[('I', 'gamma', 'vaccinated')],
    COMPARTMENTS[('I', 'delta', 'unvaccinated')],
    COMPARTMENTS[('I', 'delta', 'vaccinated')],
    COMPARTMENTS[('I', 'other', 'unvaccinated')],
    COMPARTMENTS[('I', 'other', 'vaccinated')],
    COMPARTMENTS[('I', 'omega', 'unvaccinated')],
    COMPARTMENTS[('I', 'omega', 'vaccinated')],
], dtype=np.int8)
COMPARTMENT_GROUPS[('R', 'ancestral')] = np.array([
    COMPARTMENTS[('R', 'ancestral', 'unvaccinated')],
    COMPARTMENTS[('R', 'ancestral', 'vaccinated')],
    COMPARTMENTS[('R', 'ancestral', 'newly_vaccinated')],
], dtype=np.int8)
COMPARTMENT_GROUPS[('R', 'alpha')] = np.array([
    COMPARTMENTS[('R', 'alpha', 'unvaccinated')],
    COMPARTMENTS[('R', 'alpha', 'vaccinated')],
    COMPARTMENTS[('R', 'alpha', 'newly_vaccinated')],
], dtype=np.int8)
COMPARTMENT_GROUPS[('R', 'beta')] = np.array([
    COMPARTMENTS[('R', 'beta', 'unvaccinated')],
    COMPARTMENTS[('R', 'beta', 'vaccinated')],
    COMPARTMENTS[('R', 'beta', 'newly_vaccinated')],
], dtype=np.int8)
COMPARTMENT_GROUPS[('R', 'gamma')] = np.array([
    COMPARTMENTS[('R', 'gamma', 'unvaccinated')],
    COMPARTMENTS[('R', 'gamma', 'vaccinated')],
    COMPARTMENTS[('R', 'gamma', 'newly_vaccinated')],
], dtype=np.int8)
COMPARTMENT_GROUPS[('R', 'delta')] = np.array([
    COMPARTMENTS[('R', 'delta', 'unvaccinated')],
    COMPARTMENTS[('R', 'delta', 'vaccinated')],
    COMPARTMENTS[('R', 'delta', 'newly_vaccinated')],
], dtype=np.int8)
COMPARTMENT_GROUPS[('R', 'other')] = np.array([
    COMPARTMENTS[('R', 'other', 'unvaccinated')],
    COMPARTMENTS[('R', 'other', 'vaccinated')],
    COMPARTMENTS[('R', 'other', 'newly_vaccinated')],
], dtype=np.int8)
COMPARTMENT_GROUPS[('R', 'omega')] = np.array([
    COMPARTMENTS[('R', 'omega', 'unvaccinated')],
    COMPARTMENTS[('R', 'omega', 'vaccinated')],
    COMPARTMENTS[('R', 'omega', 'newly_vaccinated')],
], dtype=np.int8)
COMPARTMENT_GROUPS[('R', 'total')] = np.array([
    COMPARTMENTS[('R', 'ancestral', 'unvaccinated')],
    COMPARTMENTS[('R', 'ancestral', 'vaccinated')],
    COMPARTMENTS[('R', 'ancestral', 'newly_vaccinated')],
    COMPARTMENTS[('R', 'alpha', 'unvaccinated')],
    COMPARTMENTS[('R', 'alpha', 'vaccinated')],
    COMPARTMENTS[('R', 'alpha', 'newly_vaccinated')],
    COMPARTMENTS[('R', 'beta', 'unvaccinated')],
    COMPARTMENTS[('R', 'beta', 'vaccinated')],
    COMPARTMENTS[('R', 'beta', 'newly_vaccinated')],
    COMPARTMENTS[('R', 'gamma', 'unvaccinated')],
    COMPARTMENTS[('R', 'gamma', 'vaccinated')],
    COMPARTMENTS[('R', 'gamma', 'newly_vaccinated')],
    COMPARTMENTS[('R', 'delta', 'unvaccinated')],
    COMPARTMENTS[('R', 'delta', 'vaccinated')],
    COMPARTMENTS[('R', 'delta', 'newly_vaccinated')],
    COMPARTMENTS[('R', 'other', 'unvaccinated')],
    COMPARTMENTS[('R', 'other', 'vaccinated')],
    COMPARTMENTS[('R', 'other', 'newly_vaccinated')],
    COMPARTMENTS[('R', 'omega', 'unvaccinated')],
    COMPARTMENTS[('R', 'omega', 'vaccinated')],
    COMPARTMENTS[('R', 'omega', 'newly_vaccinated')],
], dtype=np.int8)
COMPARTMENT_GROUPS[('N', 'unvaccinated')] = np.array([
    v for k, v in COMPARTMENTS.items() if k[2] == 'unvaccinated'
], dtype=np.int8)
COMPARTMENT_GROUPS[('N', 'vaccinated')] = np.array([
    v for k, v in COMPARTMENTS.items() if k[2] == 'vaccinated'
], dtype=np.int8)
COMPARTMENT_GROUPS[('N', 'vaccine_eligible')] = np.array([
    v for k, v in COMPARTMENTS.items() if k[2] == 'unvaccinated' and k[0] not in ['E', 'I']
], dtype=np.int8)
COMPARTMENT_GROUPS[('N', 'total')] = np.array([
    v for k, v in COMPARTMENTS.items()
], dtype=np.int8)

# Turning off the JIT is operationally 1-to-1 with
# saying something is broken in the ODE code and
# I need to figure it out.
DEBUG = int(os.getenv('NUMBA_DISABLE_JIT', 0))
